// Generated by CoffeeScript 1.6.3
(function() {
  var SchoolUtils, moment, _;

  _ = require('underscore');

  moment = require('moment');

  moment.lang('fr');

  SchoolUtils = (function() {
    var asArray, asMoment, formatDayForJson, fromIsoString, lowercase, now, parseDate, singularize, trim, weekdayName;

    function SchoolUtils() {}

    SchoolUtils.asMoment = asMoment = function(date, fmt) {
      if (fmt == null) {
        fmt = 'DD/MM/YYYY';
      }
      if (moment.isMoment(date)) {
        return date;
      } else if (_.isString(date)) {
        return moment(date, fmt);
      } else if (_.isDate(date)) {
        return moment(date);
      } else if (_.isUndefined) {
        return moment();
      } else {
        throw "invalid date " + date;
      }
    };

    SchoolUtils.trim = trim = function(s) {
      return s != null ? s.trim() : void 0;
    };

    SchoolUtils.lowercase = lowercase = function(s) {
      return s != null ? s.toLowerCase() : void 0;
    };

    SchoolUtils.singularize = singularize = function(s, exceptions) {
      var lastPos, len;
      if (s != null) {
        len = s.length;
        lastPos = s.lastIndexOf('s');
        if (exceptions && _.indexOf(exceptions, s) > -1) {
          return s;
        }
        if (lastPos === len - 1) {
          return s.substr(0, len - 1);
        }
      }
      return s;
    };

    SchoolUtils.asArray = asArray = function(value, fn) {
      if (fn == null) {
        fn = trim;
      }
      if (_.isString(value)) {
        return new Array(fn(value));
      } else if (_.isArray(value)) {
        return _.map(value, fn);
      } else {
        return [];
      }
    };

    SchoolUtils.now = now = function() {
      return moment();
    };

    SchoolUtils.parseDate = parseDate = function(str, fmt) {
      return moment(str, fmt);
    };

    SchoolUtils.weekdayName = weekdayName = function(date) {
      return asMoment(date).format('dddd');
    };

    SchoolUtils.formatDayForJson = formatDayForJson = function(date) {
      return asMoment(date).format('YYYY-MM-DD');
    };

    SchoolUtils.fromIsoString = fromIsoString = function(str) {
      return moment(new Date(str));
    };

    return SchoolUtils;

  })();

  module.exports = SchoolUtils;

}).call(this);
