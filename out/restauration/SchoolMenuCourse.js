// Generated by CoffeeScript 1.6.3
(function() {
  var SchoolMenuCourse, prepareDescriptions, trim, _;

  _ = require('underscore');

  trim = require('./SchoolUtils').trim;

  prepareDescriptions = function(data) {
    var descriptions;
    if (_.isString(data)) {
      descriptions = data.trim().split('/');
      descriptions = _.map(descriptions, trim);
    } else if (_.isArray(data)) {
      descriptions = _.map(data, prepareDescriptions);
      descriptions = _.flatten(descriptions);
    } else {
      descriptions = [];
    }
    return descriptions;
  };

  SchoolMenuCourse = (function() {
    var allTypes;

    function SchoolMenuCourse(type, description) {
      this.type = type;
      this.description = description;
    }

    SchoolMenuCourse.allTypes = allTypes = ['entree', 'plat', 'legume', 'dessert'];

    /*
    datas can be :
      a single string : can be split by '/'
      an array of strings
      in a future maybe an object or an array of strings and/or objects
    */


    SchoolMenuCourse.parseJson = function(type, datas) {
      var course, courses, description, _i, _len, _ref;
      courses = [];
      _ref = prepareDescriptions(datas);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        description = _ref[_i];
        course = new SchoolMenuCourse(type, description);
        courses.push(course);
      }
      return courses;
    };

    SchoolMenuCourse.prototype.toString = function() {
      return "SchoolMenuCourse(" + this.type + ", " + this.description + ")";
    };

    SchoolMenuCourse.prototype.formatJson = function() {
      return {
        type: this.type,
        description: this.description
      };
    };

    SchoolMenuCourse.prototype.clone = function() {
      return new SchoolMenuCourse(this.type, this.description);
    };

    SchoolMenuCourse.prototype.order = function() {
      return allTypes.indexOf(this.type) || -1;
    };

    return SchoolMenuCourse;

  })();

  module.exports = SchoolMenuCourse;

}).call(this);
