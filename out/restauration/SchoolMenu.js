// Generated by CoffeeScript 1.6.3
(function() {
  var SchoolComments, SchoolMenu, SchoolMenuDay, SchoolWeek, extendr, formatDayForJson, now, weekdayName, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  extendr = require('extendr');

  SchoolWeek = require('./SchoolWeek');

  SchoolComments = require('./SchoolComments');

  SchoolMenuDay = require('./SchoolMenuDay');

  _ref = require('./SchoolUtils'), now = _ref.now, weekdayName = _ref.weekdayName, formatDayForJson = _ref.formatDayForJson;

  SchoolMenu = (function() {
    function SchoolMenu(week, days, comments, meta) {
      this.week = week;
      this.days = days;
      this.comments = comments;
      this.meta = meta;
      this.getPreparedTitleNav = __bind(this.getPreparedTitleNav, this);
      this.getPreparedTitleShort = __bind(this.getPreparedTitleShort, this);
      this.getPreparedTitle = __bind(this.getPreparedTitle, this);
      this.getPreparedTitleLong = __bind(this.getPreparedTitleLong, this);
      this.getPreparedMenuTags = __bind(this.getPreparedMenuTags, this);
      this.formatJson = __bind(this.formatJson, this);
      meta.title = this.getPreparedTitleLong();
      meta.simpleTitle = this.getPreparedTitle();
      meta.shortTitle = this.getPreparedTitleShort();
      meta.navTitle = this.getPreparedTitleNav();
      meta.tagsForTitle = this.getPreparedMenuTags();
    }

    SchoolMenu.parseJson = function(doc) {
      var comments, data, day, dayData, menuDay, menuDays, meta, name, tous, week, _i, _len, _ref1;
      meta = doc.meta, data = doc.data;
      week = SchoolWeek.parseJson(meta.date);
      comments = SchoolComments.parseJson(data);
      menuDays = [];
      if (data.tous != null) {
        tous = SchoolMenuDay.parseJson('tous', now(), data.tous);
      }
      _ref1 = week.days();
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        day = _ref1[_i];
        name = weekdayName(day);
        dayData = data[name];
        if (dayData != null) {
          menuDay = SchoolMenuDay.parseJson(name, day, dayData);
          if (data.tous != null) {
            menuDay.addAll(tous);
          }
          menuDays.push(menuDay);
        }
      }
      return new SchoolMenu(week, menuDays, comments, meta);
    };

    SchoolMenu.prototype.formatJson = function() {
      var day, meta, output;
      meta = extendr.clone(this.meta);
      meta.week = this.week.formatJson();
      return output = {
        meta: meta,
        data: {
          comments: this.comments.formatJson(),
          days: (function() {
            var _i, _len, _ref1, _results;
            _ref1 = this.days;
            _results = [];
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
              day = _ref1[_i];
              _results.push(day.formatJson());
            }
            return _results;
          }).call(this)
        }
      };
    };

    SchoolMenu.prototype.toString = function() {
      return "SchoolMenu(" + this.week + "," + this.days + "," + this.comments + "," + this.meta + ")";
    };

    SchoolMenu.prototype.getPreparedMenuTags = function() {
      var tags;
      tags = this.meta.menutags || [];
      return tags.join(', ');
    };

    SchoolMenu.prototype.getPreparedTitleLong = function() {
      return "Menu pour " + (this.getPreparedMenuTags()) + " de la semaine du " + (this.week.from.format('DD MMMM YYYY')) + " au " + (this.week.to.format('DD MMMM YYYY'));
    };

    SchoolMenu.prototype.getPreparedTitle = function() {
      return "Menu pour la semaine du " + (this.week.from.format('DD MMMM YYYY')) + " au " + (this.week.to.format('DD MMMM YYYY'));
    };

    SchoolMenu.prototype.getPreparedTitleShort = function() {
      return "Menu du " + (this.week.from.format('DD MMM')) + " au " + (this.week.to.format('DD MMM YYYY'));
    };

    SchoolMenu.prototype.getPreparedTitleNav = function() {
      return "" + (this.week.from.format('DD MMM YYYY')) + " --> " + (this.week.to.format('DD MMM YYYY'));
    };

    return SchoolMenu;

  })();

  module.exports = SchoolMenu;

}).call(this);
