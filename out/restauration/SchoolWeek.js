// Generated by CoffeeScript 1.6.3
(function() {
  var SchoolWeek, asMoment, fromIsoString, _, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require('underscore');

  _ref = require('./SchoolUtils'), asMoment = _ref.asMoment, fromIsoString = _ref.fromIsoString;

  SchoolWeek = (function() {
    function SchoolWeek(date) {
      this.isInWeek = __bind(this.isInWeek, this);
      this.from = asMoment(date).clone().startOf('week');
      this.to = this.from.clone().add(5, 'day').add(-1, 'millisecond');
    }

    SchoolWeek.parseJson = function(date) {
      return new SchoolWeek(fromIsoString(date));
    };

    SchoolWeek.prototype.toString = function() {
      return "SchoolWeek(" + this.from + "," + this.to + ")";
    };

    SchoolWeek.prototype.formatJson = function() {
      var output;
      return output = {
        from: this.from,
        to: this.to
      };
    };

    SchoolWeek.allDayNames = function() {
      return ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche'];
    };

    SchoolWeek.prototype.isInWeek = function(date) {
      if (date.before(this.from) || date.after(this.to)) {
        return false;
      } else {
        return true;
      }
    };

    SchoolWeek.prototype.days = function() {
      var day, days, weekday, _i;
      days = [];
      for (weekday = _i = 0; _i <= 4; weekday = ++_i) {
        day = this.from.clone().set('weekday', weekday);
        days.push(day);
      }
      return days;
    };

    SchoolWeek.prototype.dayByName = function(name) {
      var weekdayIndex, weekdayName, _ref1;
      name = name.toLowerCase();
      _ref1 = allDayNames();
      for (weekdayIndex in _ref1) {
        weekdayName = _ref1[weekdayIndex];
        if (name === weekdayName) {
          return this.from.clone().set('weekday', weekdayIndex);
        }
      }
      return void 0;
    };

    return SchoolWeek;

  })();

  module.exports = SchoolWeek;

}).call(this);
