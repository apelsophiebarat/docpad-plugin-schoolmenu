// Generated by CoffeeScript 1.6.3
(function() {
  var MenuFileName, Week, asMoment, fileNameRegexpPattern, onlyInList, pathUtil, schoolLevels, _, _ref, _ref1;

  pathUtil = require('path');

  _ = require('underscore');

  Week = require('./Week');

  _ref = require('./Utils'), asMoment = _ref.asMoment, onlyInList = _ref.onlyInList;

  _ref1 = require('./Config').current(), fileNameRegexpPattern = _ref1.fileNameRegexpPattern, schoolLevels = _ref1.schoolLevels;

  MenuFileName = (function() {
    function MenuFileName(filename) {
      var basename, day, month, parameters, tags, year;
      if (filename == null) {
        throw "filename required";
      }
      this.filename = filename;
      basename = pathUtil.basename(filename);
      if (!(parameters = basename.match(fileNameRegexpPattern))) {
        throw "" + basename + " invalid basename : must respect " + fileNameRegexpPattern;
      }
      this.basename = parameters[0], year = parameters[1], month = parameters[2], day = parameters[3], tags = parameters[4];
      this.menuDate = asMoment("" + year + "/" + month + "/" + day, "YYYY/MM/DD");
      this.week = new Week(this.menuDate);
      this.tags = tags ? tags.split('-') : [];
      this.schoolLevels = _.filter(this.tags, onlyInList(schoolLevels));
      this.extension = pathUtil.extname(filename);
    }

    MenuFileName.prototype.toJSON = function() {
      return {
        filename: this.filename,
        basename: this.basename,
        extension: this.extension,
        menuDate: this.menuDate.toDate(),
        tags: this.tags,
        schoolLevels: this.schoolLevels,
        week: this.week.toJSON(),
        year: this.week.from.year(),
        month: this.week.from.month() + 1
      };
    };

    return MenuFileName;

  })();

  module.exports = MenuFileName;

}).call(this);
