// Generated by CoffeeScript 1.6.3
(function() {
  var Normalizer, lowercase, singularize, trim, _, _ref,
    __hasProp = {}.hasOwnProperty;

  _ = require('underscore');

  _ref = require('./Utils'), trim = _ref.trim, lowercase = _ref.lowercase, singularize = _ref.singularize;

  /*
   1 - for all keys:
    1.1 - to lower case
    1.2 - singular
   2 - for all values
    2.1 - if value is a string transform to array of trimmed string
    2.2 - if value is an array of string transform to array of trimmed values
  */


  Normalizer = (function() {
    var normalizeData, normalizeKey, normalizeValue;

    function Normalizer() {}

    Normalizer.normalize = function(data) {
      if (data != null) {
        return normalizeData(data);
      }
    };

    normalizeData = function(data) {
      var key, nk, normalized, nv, value;
      normalized = {};
      for (key in data) {
        if (!__hasProp.call(data, key)) continue;
        value = data[key];
        nk = normalizeKey(key);
        nv = normalizeValue(value);
        normalized[nk] = nv;
      }
      return normalized;
    };

    normalizeKey = function(key) {
      return singularize(lowercase(trim(key)), ['tous']);
    };

    normalizeValue = function(v) {
      var normalized, vv, _i, _len;
      if (_.isString(v)) {
        normalized = v.trim();
      } else if (_.isArray(v)) {
        normalized = [];
        for (_i = 0, _len = v.length; _i < _len; _i++) {
          vv = v[_i];
          normalized.push(normalizeValue(vv));
        }
      } else if (_.isObject(v)) {
        normalized = normalizeData(v);
      } else {
        normalized = v;
      }
      return normalized;
    };

    return Normalizer;

  })();

  module.exports = Normalizer;

}).call(this);
