// Generated by CoffeeScript 1.6.3
(function() {
  var Day, courseTypeToOrder, _;

  _ = require('underscore');

  courseTypeToOrder = require('./Utils').courseTypeToOrder;

  Day = (function() {
    function Day(date, courses, comments) {
      this.date = date;
      this.courses = courses;
      this.comments = comments;
    }

    Day.prototype.addAll = function(otherDay) {
      if (otherDay != null) {
        this.comments = this.comments.concat(otherDay.comments);
        this.courses = this.courses.concat(otherDay.courses);
      }
      return this;
    };

    Day.prototype.coursesGroupedByType = function(json) {
      var mapFn, orderFn, toJsonFn;
      if (json == null) {
        json = false;
      }
      orderFn = function(course) {
        return course.order;
      };
      toJsonFn = function(coll) {
        var c, _i, _len, _results;
        if (json) {
          _results = [];
          for (_i = 0, _len = coll.length; _i < _len; _i++) {
            c = coll[_i];
            _results.push(c.toJSON());
          }
          return _results;
        } else {
          return coll;
        }
      };
      mapFn = function(courses, type) {
        return {
          type: type,
          order: courseTypeToOrder(type),
          courses: toJsonFn(courses)
        };
      };
      return _.chain(this.courses).sortBy('order').groupBy('type').map(mapFn).value();
    };

    Day.prototype.toJSON = function() {
      var c, output;
      return output = {
        date: this.date.toDate(),
        coursesByType: this.coursesGroupedByType(true),
        courses: (function() {
          var _i, _len, _ref, _results;
          _ref = this.courses;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            c = _ref[_i];
            _results.push(c.toJSON());
          }
          return _results;
        }).call(this),
        comments: [].concat(this.comments)
      };
    };

    return Day;

  })();

  module.exports = Day;

}).call(this);
